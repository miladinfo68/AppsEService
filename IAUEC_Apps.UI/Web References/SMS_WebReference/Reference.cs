//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace IAUEC_Apps.UI.SMS_WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AlmasSmsSoap", Namespace="http://www.neginalmas.ir/")]
    public partial class AlmasSms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OneSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastMessageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback OneReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback OneCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback Send1SmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms21OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsToPortOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms4OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealMessageStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsTOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms2TOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms3TOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStatusTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealMessageStatusesTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivedSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivedSms2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivedSms3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTariffOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactAddToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactFindByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactFindByMobileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuthorizationTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivedSmsTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceivedSms2TOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeInfoTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsCostTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsNumberPrice2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSectionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSectionCount2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AlmasSms() {
            this.Url = global::IAUEC_Apps.UI.Properties.Settings.Default.IAUEC_Apps_UI_SMS_WebReference_AlmasSms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event OneSendCompletedEventHandler OneSendCompleted;
        
        /// <remarks/>
        public event GetLastMessageIdCompletedEventHandler GetLastMessageIdCompleted;
        
        /// <remarks/>
        public event OneReceiveCompletedEventHandler OneReceiveCompleted;
        
        /// <remarks/>
        public event OneCreditCompletedEventHandler OneCreditCompleted;
        
        /// <remarks/>
        public event Send1SmsCompletedEventHandler Send1SmsCompleted;
        
        /// <remarks/>
        public event SendSms2CompletedEventHandler SendSms2Completed;
        
        /// <remarks/>
        public event SendSms21CompletedEventHandler SendSms21Completed;
        
        /// <remarks/>
        public event SendSms3CompletedEventHandler SendSms3Completed;
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event SendSmsToPortCompletedEventHandler SendSmsToPortCompleted;
        
        /// <remarks/>
        public event SendSms4CompletedEventHandler SendSms4Completed;
        
        /// <remarks/>
        public event SendToGroupCompletedEventHandler SendToGroupCompleted;
        
        /// <remarks/>
        public event GetSendInfoCompletedEventHandler GetSendInfoCompleted;
        
        /// <remarks/>
        public event GetMessageIdsCompletedEventHandler GetMessageIdsCompleted;
        
        /// <remarks/>
        public event SendByStatusCompletedEventHandler SendByStatusCompleted;
        
        /// <remarks/>
        public event GetMessageStatusCompletedEventHandler GetMessageStatusCompleted;
        
        /// <remarks/>
        public event GetRealMessageStatusesCompletedEventHandler GetRealMessageStatusesCompleted;
        
        /// <remarks/>
        public event SendSmsTCompletedEventHandler SendSmsTCompleted;
        
        /// <remarks/>
        public event SendSms2TCompletedEventHandler SendSms2TCompleted;
        
        /// <remarks/>
        public event SendSms3TCompletedEventHandler SendSms3TCompleted;
        
        /// <remarks/>
        public event GetMessageStatusTCompletedEventHandler GetMessageStatusTCompleted;
        
        /// <remarks/>
        public event GetRealMessageStatusesTCompletedEventHandler GetRealMessageStatusesTCompleted;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event GetCreditInfoCompletedEventHandler GetCreditInfoCompleted;
        
        /// <remarks/>
        public event GetReceivedSmsCompletedEventHandler GetReceivedSmsCompleted;
        
        /// <remarks/>
        public event GetReceivedSms2CompletedEventHandler GetReceivedSms2Completed;
        
        /// <remarks/>
        public event GetReceivedSms3CompletedEventHandler GetReceivedSms3Completed;
        
        /// <remarks/>
        public event GetInfoCompletedEventHandler GetInfoCompleted;
        
        /// <remarks/>
        public event GetInfo2CompletedEventHandler GetInfo2Completed;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetSmsCostCompletedEventHandler GetSmsCostCompleted;
        
        /// <remarks/>
        public event GetTariffCompletedEventHandler GetTariffCompleted;
        
        /// <remarks/>
        public event ContactInsertCompletedEventHandler ContactInsertCompleted;
        
        /// <remarks/>
        public event ContactUpdateCompletedEventHandler ContactUpdateCompleted;
        
        /// <remarks/>
        public event ContactAddToGroupCompletedEventHandler ContactAddToGroupCompleted;
        
        /// <remarks/>
        public event ContactFindByCodeCompletedEventHandler ContactFindByCodeCompleted;
        
        /// <remarks/>
        public event ContactFindByMobileCompletedEventHandler ContactFindByMobileCompleted;
        
        /// <remarks/>
        public event GetContactGroupsCompletedEventHandler GetContactGroupsCompleted;
        
        /// <remarks/>
        public event GetAuthorizationTicketCompletedEventHandler GetAuthorizationTicketCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetCreditTCompletedEventHandler GetCreditTCompleted;
        
        /// <remarks/>
        public event GetReceivedSmsTCompletedEventHandler GetReceivedSmsTCompleted;
        
        /// <remarks/>
        public event GetReceivedSms2TCompletedEventHandler GetReceivedSms2TCompleted;
        
        /// <remarks/>
        public event GetChargeInfoTCompletedEventHandler GetChargeInfoTCompleted;
        
        /// <remarks/>
        public event GetSmsCostTCompletedEventHandler GetSmsCostTCompleted;
        
        /// <remarks/>
        public event GetSmsNumberPrice2CompletedEventHandler GetSmsNumberPrice2Completed;
        
        /// <remarks/>
        public event GetSectionCountCompletedEventHandler GetSectionCountCompleted;
        
        /// <remarks/>
        public event GetSectionCount2CompletedEventHandler GetSectionCount2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms(string pUsername, string pPassword, string[] messages, string[] mobiles, out long[] pMessageIds) {
            object[] results = this.Invoke("SendSms", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles});
            pMessageIds = ((long[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string pUsername, string pPassword, string[] messages, string[] mobiles) {
            this.SendSmsAsync(pUsername, pPassword, messages, mobiles, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string pUsername, string pPassword, string[] messages, string[] mobiles, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/OneSend", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long OneSend(string pUsername, string pPassword, string message, string mobile) {
            object[] results = this.Invoke("OneSend", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void OneSendAsync(string pUsername, string pPassword, string message, string mobile) {
            this.OneSendAsync(pUsername, pPassword, message, mobile, null);
        }
        
        /// <remarks/>
        public void OneSendAsync(string pUsername, string pPassword, string message, string mobile, object userState) {
            if ((this.OneSendOperationCompleted == null)) {
                this.OneSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOneSendOperationCompleted);
            }
            this.InvokeAsync("OneSend", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile}, this.OneSendOperationCompleted, userState);
        }
        
        private void OnOneSendOperationCompleted(object arg) {
            if ((this.OneSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OneSendCompleted(this, new OneSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetLastMessageId", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetLastMessageId(string pUsername, string pPassword) {
            object[] results = this.Invoke("GetLastMessageId", new object[] {
                        pUsername,
                        pPassword});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastMessageIdAsync(string pUsername, string pPassword) {
            this.GetLastMessageIdAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetLastMessageIdAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetLastMessageIdOperationCompleted == null)) {
                this.GetLastMessageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastMessageIdOperationCompleted);
            }
            this.InvokeAsync("GetLastMessageId", new object[] {
                        pUsername,
                        pPassword}, this.GetLastMessageIdOperationCompleted, userState);
        }
        
        private void OnGetLastMessageIdOperationCompleted(object arg) {
            if ((this.GetLastMessageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastMessageIdCompleted(this, new GetLastMessageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/OneReceive", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OneReceive(string pUsername, string pPassword, string separator) {
            object[] results = this.Invoke("OneReceive", new object[] {
                        pUsername,
                        pPassword,
                        separator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OneReceiveAsync(string pUsername, string pPassword, string separator) {
            this.OneReceiveAsync(pUsername, pPassword, separator, null);
        }
        
        /// <remarks/>
        public void OneReceiveAsync(string pUsername, string pPassword, string separator, object userState) {
            if ((this.OneReceiveOperationCompleted == null)) {
                this.OneReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOneReceiveOperationCompleted);
            }
            this.InvokeAsync("OneReceive", new object[] {
                        pUsername,
                        pPassword,
                        separator}, this.OneReceiveOperationCompleted, userState);
        }
        
        private void OnOneReceiveOperationCompleted(object arg) {
            if ((this.OneReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OneReceiveCompleted(this, new OneReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/OneCredit", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OneCredit(string pUsername, string pPassword) {
            object[] results = this.Invoke("OneCredit", new object[] {
                        pUsername,
                        pPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OneCreditAsync(string pUsername, string pPassword) {
            this.OneCreditAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void OneCreditAsync(string pUsername, string pPassword, object userState) {
            if ((this.OneCreditOperationCompleted == null)) {
                this.OneCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOneCreditOperationCompleted);
            }
            this.InvokeAsync("OneCredit", new object[] {
                        pUsername,
                        pPassword}, this.OneCreditOperationCompleted, userState);
        }
        
        private void OnOneCreditOperationCompleted(object arg) {
            if ((this.OneCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OneCreditCompleted(this, new OneCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/Send1Sms", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Send1Sms(string pUsername, string pPassword, string message, string mobile, out long pMessageId) {
            object[] results = this.Invoke("Send1Sms", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile});
            pMessageId = ((long)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Send1SmsAsync(string pUsername, string pPassword, string message, string mobile) {
            this.Send1SmsAsync(pUsername, pPassword, message, mobile, null);
        }
        
        /// <remarks/>
        public void Send1SmsAsync(string pUsername, string pPassword, string message, string mobile, object userState) {
            if ((this.Send1SmsOperationCompleted == null)) {
                this.Send1SmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend1SmsOperationCompleted);
            }
            this.InvokeAsync("Send1Sms", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile}, this.Send1SmsOperationCompleted, userState);
        }
        
        private void OnSend1SmsOperationCompleted(object arg) {
            if ((this.Send1SmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send1SmsCompleted(this, new Send1SmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms2", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms2(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out long[] pMessageIds) {
            object[] results = this.Invoke("SendSms2", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            pMessageIds = ((long[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms2Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms2Async(pUsername, pPassword, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms2Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms2OperationCompleted == null)) {
                this.SendSms2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms2OperationCompleted);
            }
            this.InvokeAsync("SendSms2", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms2OperationCompleted, userState);
        }
        
        private void OnSendSms2OperationCompleted(object arg) {
            if ((this.SendSms2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms2Completed(this, new SendSms2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms21", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms21(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out long[] pMessageIds, out long pSendId) {
            object[] results = this.Invoke("SendSms21", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            pMessageIds = ((long[])(results[1]));
            pSendId = ((long)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms21Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms21Async(pUsername, pPassword, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms21Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms21OperationCompleted == null)) {
                this.SendSms21OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms21OperationCompleted);
            }
            this.InvokeAsync("SendSms21", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms21OperationCompleted, userState);
        }
        
        private void OnSendSms21OperationCompleted(object arg) {
            if ((this.SendSms21Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms21Completed(this, new SendSms21CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms3", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms3(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out SendSmsResult result) {
            object[] results = this.Invoke("SendSms3", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            result = ((SendSmsResult)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms3Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms3Async(pUsername, pPassword, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms3Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms3OperationCompleted == null)) {
                this.SendSms3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms3OperationCompleted);
            }
            this.InvokeAsync("SendSms3", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms3OperationCompleted, userState);
        }
        
        private void OnSendSms3OperationCompleted(object arg) {
            if ((this.SendSms3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms3Completed(this, new SendSms3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/Send", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Send(string pUsername, string pPassword, long line, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out SendSmsResult result) {
            object[] results = this.Invoke("Send", new object[] {
                        pUsername,
                        pPassword,
                        line,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            result = ((SendSmsResult)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string pUsername, string pPassword, long line, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendAsync(pUsername, pPassword, line, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendAsync(string pUsername, string pPassword, long line, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        pUsername,
                        pPassword,
                        line,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSmsToPort", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSmsToPort(string pUsername, string pPassword, string message, string mobile, int portNo, out long pSendId, out long[] pMessageIds) {
            object[] results = this.Invoke("SendSmsToPort", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile,
                        portNo});
            pSendId = ((long)(results[1]));
            pMessageIds = ((long[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsToPortAsync(string pUsername, string pPassword, string message, string mobile, int portNo) {
            this.SendSmsToPortAsync(pUsername, pPassword, message, mobile, portNo, null);
        }
        
        /// <remarks/>
        public void SendSmsToPortAsync(string pUsername, string pPassword, string message, string mobile, int portNo, object userState) {
            if ((this.SendSmsToPortOperationCompleted == null)) {
                this.SendSmsToPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsToPortOperationCompleted);
            }
            this.InvokeAsync("SendSmsToPort", new object[] {
                        pUsername,
                        pPassword,
                        message,
                        mobile,
                        portNo}, this.SendSmsToPortOperationCompleted, userState);
        }
        
        private void OnSendSmsToPortOperationCompleted(object arg) {
            if ((this.SendSmsToPortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsToPortCompleted(this, new SendSmsToPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms4", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms4(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out long pSendId) {
            object[] results = this.Invoke("SendSms4", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            pSendId = ((long)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms4Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms4Async(pUsername, pPassword, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms4Async(string pUsername, string pPassword, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms4OperationCompleted == null)) {
                this.SendSms4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms4OperationCompleted);
            }
            this.InvokeAsync("SendSms4", new object[] {
                        pUsername,
                        pPassword,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms4OperationCompleted, userState);
        }
        
        private void OnSendSms4OperationCompleted(object arg) {
            if ((this.SendSms4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms4Completed(this, new SendSms4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendToGroup", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendToGroup(string pUsername, string pPassword, string pBody, string[] pGroupIds, bool pVariableBody, int pRandomCount, out SendSmsResult result) {
            object[] results = this.Invoke("SendToGroup", new object[] {
                        pUsername,
                        pPassword,
                        pBody,
                        pGroupIds,
                        pVariableBody,
                        pRandomCount});
            result = ((SendSmsResult)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendToGroupAsync(string pUsername, string pPassword, string pBody, string[] pGroupIds, bool pVariableBody, int pRandomCount) {
            this.SendToGroupAsync(pUsername, pPassword, pBody, pGroupIds, pVariableBody, pRandomCount, null);
        }
        
        /// <remarks/>
        public void SendToGroupAsync(string pUsername, string pPassword, string pBody, string[] pGroupIds, bool pVariableBody, int pRandomCount, object userState) {
            if ((this.SendToGroupOperationCompleted == null)) {
                this.SendToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToGroupOperationCompleted);
            }
            this.InvokeAsync("SendToGroup", new object[] {
                        pUsername,
                        pPassword,
                        pBody,
                        pGroupIds,
                        pVariableBody,
                        pRandomCount}, this.SendToGroupOperationCompleted, userState);
        }
        
        private void OnSendToGroupOperationCompleted(object arg) {
            if ((this.SendToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToGroupCompleted(this, new SendToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSendInfo", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetSendInfo(string pUsername, string pPassword, long pSendId, out SendSmsResult pResult) {
            object[] results = this.Invoke("GetSendInfo", new object[] {
                        pUsername,
                        pPassword,
                        pSendId});
            pResult = ((SendSmsResult)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendInfoAsync(string pUsername, string pPassword, long pSendId) {
            this.GetSendInfoAsync(pUsername, pPassword, pSendId, null);
        }
        
        /// <remarks/>
        public void GetSendInfoAsync(string pUsername, string pPassword, long pSendId, object userState) {
            if ((this.GetSendInfoOperationCompleted == null)) {
                this.GetSendInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendInfoOperationCompleted);
            }
            this.InvokeAsync("GetSendInfo", new object[] {
                        pUsername,
                        pPassword,
                        pSendId}, this.GetSendInfoOperationCompleted, userState);
        }
        
        private void OnGetSendInfoOperationCompleted(object arg) {
            if ((this.GetSendInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendInfoCompleted(this, new GetSendInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetMessageIds", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMessageIds(string pUsername, string pPassword, long pSendId, out long[] pMessageIds, out int[] pStatuses) {
            object[] results = this.Invoke("GetMessageIds", new object[] {
                        pUsername,
                        pPassword,
                        pSendId});
            pMessageIds = ((long[])(results[1]));
            pStatuses = ((int[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageIdsAsync(string pUsername, string pPassword, long pSendId) {
            this.GetMessageIdsAsync(pUsername, pPassword, pSendId, null);
        }
        
        /// <remarks/>
        public void GetMessageIdsAsync(string pUsername, string pPassword, long pSendId, object userState) {
            if ((this.GetMessageIdsOperationCompleted == null)) {
                this.GetMessageIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageIdsOperationCompleted);
            }
            this.InvokeAsync("GetMessageIds", new object[] {
                        pUsername,
                        pPassword,
                        pSendId}, this.GetMessageIdsOperationCompleted, userState);
        }
        
        private void OnGetMessageIdsOperationCompleted(object arg) {
            if ((this.GetMessageIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageIdsCompleted(this, new GetMessageIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendByStatus", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendByStatus(string pUsername, string pPassword, long pSendId, int pMessageStatusId, out long[] pMessageIds, out long pSendIdResult) {
            object[] results = this.Invoke("SendByStatus", new object[] {
                        pUsername,
                        pPassword,
                        pSendId,
                        pMessageStatusId});
            pMessageIds = ((long[])(results[1]));
            pSendIdResult = ((long)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendByStatusAsync(string pUsername, string pPassword, long pSendId, int pMessageStatusId) {
            this.SendByStatusAsync(pUsername, pPassword, pSendId, pMessageStatusId, null);
        }
        
        /// <remarks/>
        public void SendByStatusAsync(string pUsername, string pPassword, long pSendId, int pMessageStatusId, object userState) {
            if ((this.SendByStatusOperationCompleted == null)) {
                this.SendByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendByStatusOperationCompleted);
            }
            this.InvokeAsync("SendByStatus", new object[] {
                        pUsername,
                        pPassword,
                        pSendId,
                        pMessageStatusId}, this.SendByStatusOperationCompleted, userState);
        }
        
        private void OnSendByStatusOperationCompleted(object arg) {
            if ((this.SendByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendByStatusCompleted(this, new SendByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetMessageStatus", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMessageStatus(string pUsername, string pPassword, long[] pMessageIds, out int[] pStatuses) {
            object[] results = this.Invoke("GetMessageStatus", new object[] {
                        pUsername,
                        pPassword,
                        pMessageIds});
            pStatuses = ((int[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string pUsername, string pPassword, long[] pMessageIds) {
            this.GetMessageStatusAsync(pUsername, pPassword, pMessageIds, null);
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string pUsername, string pPassword, long[] pMessageIds, object userState) {
            if ((this.GetMessageStatusOperationCompleted == null)) {
                this.GetMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStatusOperationCompleted);
            }
            this.InvokeAsync("GetMessageStatus", new object[] {
                        pUsername,
                        pPassword,
                        pMessageIds}, this.GetMessageStatusOperationCompleted, userState);
        }
        
        private void OnGetMessageStatusOperationCompleted(object arg) {
            if ((this.GetMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStatusCompleted(this, new GetMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetRealMessageStatuses", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetRealMessageStatuses(string pUsername, string pPassword, long[] pMessageIds, out int[] pStatuses) {
            object[] results = this.Invoke("GetRealMessageStatuses", new object[] {
                        pUsername,
                        pPassword,
                        pMessageIds});
            pStatuses = ((int[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealMessageStatusesAsync(string pUsername, string pPassword, long[] pMessageIds) {
            this.GetRealMessageStatusesAsync(pUsername, pPassword, pMessageIds, null);
        }
        
        /// <remarks/>
        public void GetRealMessageStatusesAsync(string pUsername, string pPassword, long[] pMessageIds, object userState) {
            if ((this.GetRealMessageStatusesOperationCompleted == null)) {
                this.GetRealMessageStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealMessageStatusesOperationCompleted);
            }
            this.InvokeAsync("GetRealMessageStatuses", new object[] {
                        pUsername,
                        pPassword,
                        pMessageIds}, this.GetRealMessageStatusesOperationCompleted, userState);
        }
        
        private void OnGetRealMessageStatusesOperationCompleted(object arg) {
            if ((this.GetRealMessageStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealMessageStatusesCompleted(this, new GetRealMessageStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSmsT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSmsT(string pTicket, string[] messages, string[] mobiles, out long[] pMessageIds) {
            object[] results = this.Invoke("SendSmsT", new object[] {
                        pTicket,
                        messages,
                        mobiles});
            pMessageIds = ((long[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsTAsync(string pTicket, string[] messages, string[] mobiles) {
            this.SendSmsTAsync(pTicket, messages, mobiles, null);
        }
        
        /// <remarks/>
        public void SendSmsTAsync(string pTicket, string[] messages, string[] mobiles, object userState) {
            if ((this.SendSmsTOperationCompleted == null)) {
                this.SendSmsTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsTOperationCompleted);
            }
            this.InvokeAsync("SendSmsT", new object[] {
                        pTicket,
                        messages,
                        mobiles}, this.SendSmsTOperationCompleted, userState);
        }
        
        private void OnSendSmsTOperationCompleted(object arg) {
            if ((this.SendSmsTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsTCompleted(this, new SendSmsTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms2T", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms2T(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out long[] pMessageIds) {
            object[] results = this.Invoke("SendSms2T", new object[] {
                        pTicket,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            pMessageIds = ((long[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms2TAsync(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms2TAsync(pTicket, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms2TAsync(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms2TOperationCompleted == null)) {
                this.SendSms2TOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms2TOperationCompleted);
            }
            this.InvokeAsync("SendSms2T", new object[] {
                        pTicket,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms2TOperationCompleted, userState);
        }
        
        private void OnSendSms2TOperationCompleted(object arg) {
            if ((this.SendSms2TCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms2TCompleted(this, new SendSms2TCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/SendSms3T", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendSms3T(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, out SendSmsResult result) {
            object[] results = this.Invoke("SendSms3T", new object[] {
                        pTicket,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass});
            result = ((SendSmsResult)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendSms3TAsync(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass) {
            this.SendSms3TAsync(pTicket, messages, mobiles, UDH, encodings, mclass, null);
        }
        
        /// <remarks/>
        public void SendSms3TAsync(string pTicket, string[] messages, string[] mobiles, string[] UDH, int[] encodings, int[] mclass, object userState) {
            if ((this.SendSms3TOperationCompleted == null)) {
                this.SendSms3TOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms3TOperationCompleted);
            }
            this.InvokeAsync("SendSms3T", new object[] {
                        pTicket,
                        messages,
                        mobiles,
                        UDH,
                        encodings,
                        mclass}, this.SendSms3TOperationCompleted, userState);
        }
        
        private void OnSendSms3TOperationCompleted(object arg) {
            if ((this.SendSms3TCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms3TCompleted(this, new SendSms3TCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetMessageStatusT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetMessageStatusT(string pTicket, long[] pMessageIds, out int[] pStatuses) {
            object[] results = this.Invoke("GetMessageStatusT", new object[] {
                        pTicket,
                        pMessageIds});
            pStatuses = ((int[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStatusTAsync(string pTicket, long[] pMessageIds) {
            this.GetMessageStatusTAsync(pTicket, pMessageIds, null);
        }
        
        /// <remarks/>
        public void GetMessageStatusTAsync(string pTicket, long[] pMessageIds, object userState) {
            if ((this.GetMessageStatusTOperationCompleted == null)) {
                this.GetMessageStatusTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStatusTOperationCompleted);
            }
            this.InvokeAsync("GetMessageStatusT", new object[] {
                        pTicket,
                        pMessageIds}, this.GetMessageStatusTOperationCompleted, userState);
        }
        
        private void OnGetMessageStatusTOperationCompleted(object arg) {
            if ((this.GetMessageStatusTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStatusTCompleted(this, new GetMessageStatusTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetRealMessageStatusesT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetRealMessageStatusesT(string pTicket, long[] pMessageIds, out int[] pStatuses) {
            object[] results = this.Invoke("GetRealMessageStatusesT", new object[] {
                        pTicket,
                        pMessageIds});
            pStatuses = ((int[])(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealMessageStatusesTAsync(string pTicket, long[] pMessageIds) {
            this.GetRealMessageStatusesTAsync(pTicket, pMessageIds, null);
        }
        
        /// <remarks/>
        public void GetRealMessageStatusesTAsync(string pTicket, long[] pMessageIds, object userState) {
            if ((this.GetRealMessageStatusesTOperationCompleted == null)) {
                this.GetRealMessageStatusesTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealMessageStatusesTOperationCompleted);
            }
            this.InvokeAsync("GetRealMessageStatusesT", new object[] {
                        pTicket,
                        pMessageIds}, this.GetRealMessageStatusesTOperationCompleted, userState);
        }
        
        private void OnGetRealMessageStatusesTOperationCompleted(object arg) {
            if ((this.GetRealMessageStatusesTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealMessageStatusesTCompleted(this, new GetRealMessageStatusesTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetCredit", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCredit(string pUsername, string pPassword, out long pCredit) {
            object[] results = this.Invoke("GetCredit", new object[] {
                        pUsername,
                        pPassword});
            pCredit = ((long)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync(string pUsername, string pPassword) {
            this.GetCreditAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[] {
                        pUsername,
                        pPassword}, this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetCreditInfo", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCreditInfo(string pUsername, string pPassword, out long pCredit, out long pSendCost, out long pReceiveCost, out long pCharge) {
            object[] results = this.Invoke("GetCreditInfo", new object[] {
                        pUsername,
                        pPassword});
            pCredit = ((long)(results[1]));
            pSendCost = ((long)(results[2]));
            pReceiveCost = ((long)(results[3]));
            pCharge = ((long)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditInfoAsync(string pUsername, string pPassword) {
            this.GetCreditInfoAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetCreditInfoAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetCreditInfoOperationCompleted == null)) {
                this.GetCreditInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditInfoOperationCompleted);
            }
            this.InvokeAsync("GetCreditInfo", new object[] {
                        pUsername,
                        pPassword}, this.GetCreditInfoOperationCompleted, userState);
        }
        
        private void OnGetCreditInfoOperationCompleted(object arg) {
            if ((this.GetCreditInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditInfoCompleted(this, new GetCreditInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetReceivedSms", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetReceivedSms(string pUsername, string pPassword, bool pWithSchema, bool mergeMessages, out string pRecieved) {
            object[] results = this.Invoke("GetReceivedSms", new object[] {
                        pUsername,
                        pPassword,
                        pWithSchema,
                        mergeMessages});
            pRecieved = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivedSmsAsync(string pUsername, string pPassword, bool pWithSchema, bool mergeMessages) {
            this.GetReceivedSmsAsync(pUsername, pPassword, pWithSchema, mergeMessages, null);
        }
        
        /// <remarks/>
        public void GetReceivedSmsAsync(string pUsername, string pPassword, bool pWithSchema, bool mergeMessages, object userState) {
            if ((this.GetReceivedSmsOperationCompleted == null)) {
                this.GetReceivedSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivedSmsOperationCompleted);
            }
            this.InvokeAsync("GetReceivedSms", new object[] {
                        pUsername,
                        pPassword,
                        pWithSchema,
                        mergeMessages}, this.GetReceivedSmsOperationCompleted, userState);
        }
        
        private void OnGetReceivedSmsOperationCompleted(object arg) {
            if ((this.GetReceivedSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivedSmsCompleted(this, new GetReceivedSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetReceivedSms2", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetReceivedSms2(string pUsername, string pPassword, out string[] pMessages, out string[] pFroms, out string[] pSmsc, out string[] pMessageIds, out System.DateTime[] pEnteredDate) {
            object[] results = this.Invoke("GetReceivedSms2", new object[] {
                        pUsername,
                        pPassword});
            pMessages = ((string[])(results[1]));
            pFroms = ((string[])(results[2]));
            pSmsc = ((string[])(results[3]));
            pMessageIds = ((string[])(results[4]));
            pEnteredDate = ((System.DateTime[])(results[5]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivedSms2Async(string pUsername, string pPassword) {
            this.GetReceivedSms2Async(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetReceivedSms2Async(string pUsername, string pPassword, object userState) {
            if ((this.GetReceivedSms2OperationCompleted == null)) {
                this.GetReceivedSms2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivedSms2OperationCompleted);
            }
            this.InvokeAsync("GetReceivedSms2", new object[] {
                        pUsername,
                        pPassword}, this.GetReceivedSms2OperationCompleted, userState);
        }
        
        private void OnGetReceivedSms2OperationCompleted(object arg) {
            if ((this.GetReceivedSms2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivedSms2Completed(this, new GetReceivedSms2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetReceivedSms3", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetReceivedSms3(string pUsername, string pPassword, out string[] pMessages, out string[] pFroms, out string[] pMessageIds, out System.DateTime[] pEnteredDate) {
            object[] results = this.Invoke("GetReceivedSms3", new object[] {
                        pUsername,
                        pPassword});
            pMessages = ((string[])(results[1]));
            pFroms = ((string[])(results[2]));
            pMessageIds = ((string[])(results[3]));
            pEnteredDate = ((System.DateTime[])(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivedSms3Async(string pUsername, string pPassword) {
            this.GetReceivedSms3Async(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetReceivedSms3Async(string pUsername, string pPassword, object userState) {
            if ((this.GetReceivedSms3OperationCompleted == null)) {
                this.GetReceivedSms3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivedSms3OperationCompleted);
            }
            this.InvokeAsync("GetReceivedSms3", new object[] {
                        pUsername,
                        pPassword}, this.GetReceivedSms3OperationCompleted, userState);
        }
        
        private void OnGetReceivedSms3OperationCompleted(object arg) {
            if ((this.GetReceivedSms3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivedSms3Completed(this, new GetReceivedSms3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetInfo", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInfo(string pUsername, string pPassword, out string pSmsNumber, out long pCredit, out string pName, out int pRole, out int pUserId) {
            object[] results = this.Invoke("GetInfo", new object[] {
                        pUsername,
                        pPassword});
            pSmsNumber = ((string)(results[1]));
            pCredit = ((long)(results[2]));
            pName = ((string)(results[3]));
            pRole = ((int)(results[4]));
            pUserId = ((int)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoAsync(string pUsername, string pPassword) {
            this.GetInfoAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetInfoAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetInfoOperationCompleted == null)) {
                this.GetInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoOperationCompleted);
            }
            this.InvokeAsync("GetInfo", new object[] {
                        pUsername,
                        pPassword}, this.GetInfoOperationCompleted, userState);
        }
        
        private void OnGetInfoOperationCompleted(object arg) {
            if ((this.GetInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoCompleted(this, new GetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetInfo2", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInfo2(string pUsername, string pPassword, out string pSmsNumber, out long pCredit, out string pName, out int pRole, out int pUserId, out System.DateTime pEndDate, out string pMobile) {
            object[] results = this.Invoke("GetInfo2", new object[] {
                        pUsername,
                        pPassword});
            pSmsNumber = ((string)(results[1]));
            pCredit = ((long)(results[2]));
            pName = ((string)(results[3]));
            pRole = ((int)(results[4]));
            pUserId = ((int)(results[5]));
            pEndDate = ((System.DateTime)(results[6]));
            pMobile = ((string)(results[7]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfo2Async(string pUsername, string pPassword) {
            this.GetInfo2Async(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetInfo2Async(string pUsername, string pPassword, object userState) {
            if ((this.GetInfo2OperationCompleted == null)) {
                this.GetInfo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfo2OperationCompleted);
            }
            this.InvokeAsync("GetInfo2", new object[] {
                        pUsername,
                        pPassword}, this.GetInfo2OperationCompleted, userState);
        }
        
        private void OnGetInfo2OperationCompleted(object arg) {
            if ((this.GetInfo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfo2Completed(this, new GetInfo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ChangePassword", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangePassword(string pUsername, string pPassword, string pNewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        pUsername,
                        pPassword,
                        pNewPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string pUsername, string pPassword, string pNewPassword) {
            this.ChangePasswordAsync(pUsername, pPassword, pNewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string pUsername, string pPassword, string pNewPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        pUsername,
                        pPassword,
                        pNewPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSmsCost", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSmsCost(string pUsername, string pPassword, string sms, out int cost) {
            object[] results = this.Invoke("GetSmsCost", new object[] {
                        pUsername,
                        pPassword,
                        sms});
            cost = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCostAsync(string pUsername, string pPassword, string sms) {
            this.GetSmsCostAsync(pUsername, pPassword, sms, null);
        }
        
        /// <remarks/>
        public void GetSmsCostAsync(string pUsername, string pPassword, string sms, object userState) {
            if ((this.GetSmsCostOperationCompleted == null)) {
                this.GetSmsCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCostOperationCompleted);
            }
            this.InvokeAsync("GetSmsCost", new object[] {
                        pUsername,
                        pPassword,
                        sms}, this.GetSmsCostOperationCompleted, userState);
        }
        
        private void OnGetSmsCostOperationCompleted(object arg) {
            if ((this.GetSmsCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCostCompleted(this, new GetSmsCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetTariff", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTariff(string pUsername, string pPassword, out string[] pSmsNumbers, out int[] pSendPrices, out int[] pSendPriceUnis) {
            object[] results = this.Invoke("GetTariff", new object[] {
                        pUsername,
                        pPassword});
            pSmsNumbers = ((string[])(results[1]));
            pSendPrices = ((int[])(results[2]));
            pSendPriceUnis = ((int[])(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTariffAsync(string pUsername, string pPassword) {
            this.GetTariffAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetTariffAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetTariffOperationCompleted == null)) {
                this.GetTariffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTariffOperationCompleted);
            }
            this.InvokeAsync("GetTariff", new object[] {
                        pUsername,
                        pPassword}, this.GetTariffOperationCompleted, userState);
        }
        
        private void OnGetTariffOperationCompleted(object arg) {
            if ((this.GetTariffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTariffCompleted(this, new GetTariffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ContactInsert", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ContactInsert(string pUsername, string pPassword, bool pIsLocked, long pCode, string pMobile, string pFirstName, string pLastName, string pNickName, string pEmail, string pAddress, string pPhone, bool pIsMan, string pVar1, string pVar2, string pDesc) {
            object[] results = this.Invoke("ContactInsert", new object[] {
                        pUsername,
                        pPassword,
                        pIsLocked,
                        pCode,
                        pMobile,
                        pFirstName,
                        pLastName,
                        pNickName,
                        pEmail,
                        pAddress,
                        pPhone,
                        pIsMan,
                        pVar1,
                        pVar2,
                        pDesc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ContactInsertAsync(string pUsername, string pPassword, bool pIsLocked, long pCode, string pMobile, string pFirstName, string pLastName, string pNickName, string pEmail, string pAddress, string pPhone, bool pIsMan, string pVar1, string pVar2, string pDesc) {
            this.ContactInsertAsync(pUsername, pPassword, pIsLocked, pCode, pMobile, pFirstName, pLastName, pNickName, pEmail, pAddress, pPhone, pIsMan, pVar1, pVar2, pDesc, null);
        }
        
        /// <remarks/>
        public void ContactInsertAsync(
                    string pUsername, 
                    string pPassword, 
                    bool pIsLocked, 
                    long pCode, 
                    string pMobile, 
                    string pFirstName, 
                    string pLastName, 
                    string pNickName, 
                    string pEmail, 
                    string pAddress, 
                    string pPhone, 
                    bool pIsMan, 
                    string pVar1, 
                    string pVar2, 
                    string pDesc, 
                    object userState) {
            if ((this.ContactInsertOperationCompleted == null)) {
                this.ContactInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactInsertOperationCompleted);
            }
            this.InvokeAsync("ContactInsert", new object[] {
                        pUsername,
                        pPassword,
                        pIsLocked,
                        pCode,
                        pMobile,
                        pFirstName,
                        pLastName,
                        pNickName,
                        pEmail,
                        pAddress,
                        pPhone,
                        pIsMan,
                        pVar1,
                        pVar2,
                        pDesc}, this.ContactInsertOperationCompleted, userState);
        }
        
        private void OnContactInsertOperationCompleted(object arg) {
            if ((this.ContactInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactInsertCompleted(this, new ContactInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ContactUpdate", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ContactUpdate(string pUsername, string pPassword, bool pIsLocked, long pCode, string pMobile, string pFirstName, string pLastName, string pNickName, string pEmail, string pAddress, string pPhone, bool pIsMan, string pVar1, string pVar2, string pDesc) {
            object[] results = this.Invoke("ContactUpdate", new object[] {
                        pUsername,
                        pPassword,
                        pIsLocked,
                        pCode,
                        pMobile,
                        pFirstName,
                        pLastName,
                        pNickName,
                        pEmail,
                        pAddress,
                        pPhone,
                        pIsMan,
                        pVar1,
                        pVar2,
                        pDesc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ContactUpdateAsync(string pUsername, string pPassword, bool pIsLocked, long pCode, string pMobile, string pFirstName, string pLastName, string pNickName, string pEmail, string pAddress, string pPhone, bool pIsMan, string pVar1, string pVar2, string pDesc) {
            this.ContactUpdateAsync(pUsername, pPassword, pIsLocked, pCode, pMobile, pFirstName, pLastName, pNickName, pEmail, pAddress, pPhone, pIsMan, pVar1, pVar2, pDesc, null);
        }
        
        /// <remarks/>
        public void ContactUpdateAsync(
                    string pUsername, 
                    string pPassword, 
                    bool pIsLocked, 
                    long pCode, 
                    string pMobile, 
                    string pFirstName, 
                    string pLastName, 
                    string pNickName, 
                    string pEmail, 
                    string pAddress, 
                    string pPhone, 
                    bool pIsMan, 
                    string pVar1, 
                    string pVar2, 
                    string pDesc, 
                    object userState) {
            if ((this.ContactUpdateOperationCompleted == null)) {
                this.ContactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactUpdateOperationCompleted);
            }
            this.InvokeAsync("ContactUpdate", new object[] {
                        pUsername,
                        pPassword,
                        pIsLocked,
                        pCode,
                        pMobile,
                        pFirstName,
                        pLastName,
                        pNickName,
                        pEmail,
                        pAddress,
                        pPhone,
                        pIsMan,
                        pVar1,
                        pVar2,
                        pDesc}, this.ContactUpdateOperationCompleted, userState);
        }
        
        private void OnContactUpdateOperationCompleted(object arg) {
            if ((this.ContactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactUpdateCompleted(this, new ContactUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ContactAddToGroup", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ContactAddToGroup(string pUsername, string pPassword, long pContactCode, long pGroupCode) {
            object[] results = this.Invoke("ContactAddToGroup", new object[] {
                        pUsername,
                        pPassword,
                        pContactCode,
                        pGroupCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ContactAddToGroupAsync(string pUsername, string pPassword, long pContactCode, long pGroupCode) {
            this.ContactAddToGroupAsync(pUsername, pPassword, pContactCode, pGroupCode, null);
        }
        
        /// <remarks/>
        public void ContactAddToGroupAsync(string pUsername, string pPassword, long pContactCode, long pGroupCode, object userState) {
            if ((this.ContactAddToGroupOperationCompleted == null)) {
                this.ContactAddToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactAddToGroupOperationCompleted);
            }
            this.InvokeAsync("ContactAddToGroup", new object[] {
                        pUsername,
                        pPassword,
                        pContactCode,
                        pGroupCode}, this.ContactAddToGroupOperationCompleted, userState);
        }
        
        private void OnContactAddToGroupOperationCompleted(object arg) {
            if ((this.ContactAddToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactAddToGroupCompleted(this, new ContactAddToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ContactFindByCode", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContactFindByCode(string pUsername, string pPassword, long pContactCode) {
            object[] results = this.Invoke("ContactFindByCode", new object[] {
                        pUsername,
                        pPassword,
                        pContactCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactFindByCodeAsync(string pUsername, string pPassword, long pContactCode) {
            this.ContactFindByCodeAsync(pUsername, pPassword, pContactCode, null);
        }
        
        /// <remarks/>
        public void ContactFindByCodeAsync(string pUsername, string pPassword, long pContactCode, object userState) {
            if ((this.ContactFindByCodeOperationCompleted == null)) {
                this.ContactFindByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactFindByCodeOperationCompleted);
            }
            this.InvokeAsync("ContactFindByCode", new object[] {
                        pUsername,
                        pPassword,
                        pContactCode}, this.ContactFindByCodeOperationCompleted, userState);
        }
        
        private void OnContactFindByCodeOperationCompleted(object arg) {
            if ((this.ContactFindByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactFindByCodeCompleted(this, new ContactFindByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/ContactFindByMobile", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContactFindByMobile(string pUsername, string pPassword, string pMobile) {
            object[] results = this.Invoke("ContactFindByMobile", new object[] {
                        pUsername,
                        pPassword,
                        pMobile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactFindByMobileAsync(string pUsername, string pPassword, string pMobile) {
            this.ContactFindByMobileAsync(pUsername, pPassword, pMobile, null);
        }
        
        /// <remarks/>
        public void ContactFindByMobileAsync(string pUsername, string pPassword, string pMobile, object userState) {
            if ((this.ContactFindByMobileOperationCompleted == null)) {
                this.ContactFindByMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactFindByMobileOperationCompleted);
            }
            this.InvokeAsync("ContactFindByMobile", new object[] {
                        pUsername,
                        pPassword,
                        pMobile}, this.ContactFindByMobileOperationCompleted, userState);
        }
        
        private void OnContactFindByMobileOperationCompleted(object arg) {
            if ((this.ContactFindByMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactFindByMobileCompleted(this, new ContactFindByMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetContactGroups", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetContactGroups(string pUsername, string pPassword, out int[] pIds, out string[] pNames) {
            object[] results = this.Invoke("GetContactGroups", new object[] {
                        pUsername,
                        pPassword});
            pIds = ((int[])(results[1]));
            pNames = ((string[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactGroupsAsync(string pUsername, string pPassword) {
            this.GetContactGroupsAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetContactGroupsAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetContactGroupsOperationCompleted == null)) {
                this.GetContactGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactGroupsOperationCompleted);
            }
            this.InvokeAsync("GetContactGroups", new object[] {
                        pUsername,
                        pPassword}, this.GetContactGroupsOperationCompleted, userState);
        }
        
        private void OnGetContactGroupsOperationCompleted(object arg) {
            if ((this.GetContactGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactGroupsCompleted(this, new GetContactGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetAuthorizationTicket", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAuthorizationTicket(string pUsername, string pPassword) {
            object[] results = this.Invoke("GetAuthorizationTicket", new object[] {
                        pUsername,
                        pPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuthorizationTicketAsync(string pUsername, string pPassword) {
            this.GetAuthorizationTicketAsync(pUsername, pPassword, null);
        }
        
        /// <remarks/>
        public void GetAuthorizationTicketAsync(string pUsername, string pPassword, object userState) {
            if ((this.GetAuthorizationTicketOperationCompleted == null)) {
                this.GetAuthorizationTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuthorizationTicketOperationCompleted);
            }
            this.InvokeAsync("GetAuthorizationTicket", new object[] {
                        pUsername,
                        pPassword}, this.GetAuthorizationTicketOperationCompleted, userState);
        }
        
        private void OnGetAuthorizationTicketOperationCompleted(object arg) {
            if ((this.GetAuthorizationTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuthorizationTicketCompleted(this, new GetAuthorizationTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/Logout", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout(string ticket) {
            this.Invoke("Logout", new object[] {
                        ticket});
        }
        
        /// <remarks/>
        public void LogoutAsync(string ticket) {
            this.LogoutAsync(ticket, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string ticket, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        ticket}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetCreditT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCreditT(string pTicket, out long pCredit) {
            object[] results = this.Invoke("GetCreditT", new object[] {
                        pTicket});
            pCredit = ((long)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditTAsync(string pTicket) {
            this.GetCreditTAsync(pTicket, null);
        }
        
        /// <remarks/>
        public void GetCreditTAsync(string pTicket, object userState) {
            if ((this.GetCreditTOperationCompleted == null)) {
                this.GetCreditTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditTOperationCompleted);
            }
            this.InvokeAsync("GetCreditT", new object[] {
                        pTicket}, this.GetCreditTOperationCompleted, userState);
        }
        
        private void OnGetCreditTOperationCompleted(object arg) {
            if ((this.GetCreditTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditTCompleted(this, new GetCreditTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetReceivedSmsT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetReceivedSmsT(string pTicket, bool pWithSchema, out string pRecieved) {
            object[] results = this.Invoke("GetReceivedSmsT", new object[] {
                        pTicket,
                        pWithSchema});
            pRecieved = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivedSmsTAsync(string pTicket, bool pWithSchema) {
            this.GetReceivedSmsTAsync(pTicket, pWithSchema, null);
        }
        
        /// <remarks/>
        public void GetReceivedSmsTAsync(string pTicket, bool pWithSchema, object userState) {
            if ((this.GetReceivedSmsTOperationCompleted == null)) {
                this.GetReceivedSmsTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivedSmsTOperationCompleted);
            }
            this.InvokeAsync("GetReceivedSmsT", new object[] {
                        pTicket,
                        pWithSchema}, this.GetReceivedSmsTOperationCompleted, userState);
        }
        
        private void OnGetReceivedSmsTOperationCompleted(object arg) {
            if ((this.GetReceivedSmsTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivedSmsTCompleted(this, new GetReceivedSmsTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetReceivedSms2T", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetReceivedSms2T(string pTicket, bool pWithSchema, out string pRecieved) {
            object[] results = this.Invoke("GetReceivedSms2T", new object[] {
                        pTicket,
                        pWithSchema});
            pRecieved = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetReceivedSms2TAsync(string pTicket, bool pWithSchema) {
            this.GetReceivedSms2TAsync(pTicket, pWithSchema, null);
        }
        
        /// <remarks/>
        public void GetReceivedSms2TAsync(string pTicket, bool pWithSchema, object userState) {
            if ((this.GetReceivedSms2TOperationCompleted == null)) {
                this.GetReceivedSms2TOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceivedSms2TOperationCompleted);
            }
            this.InvokeAsync("GetReceivedSms2T", new object[] {
                        pTicket,
                        pWithSchema}, this.GetReceivedSms2TOperationCompleted, userState);
        }
        
        private void OnGetReceivedSms2TOperationCompleted(object arg) {
            if ((this.GetReceivedSms2TCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceivedSms2TCompleted(this, new GetReceivedSms2TCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetChargeInfoT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetChargeInfoT(string pTicket, out System.Data.DataTable pReport) {
            object[] results = this.Invoke("GetChargeInfoT", new object[] {
                        pTicket});
            pReport = ((System.Data.DataTable)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeInfoTAsync(string pTicket) {
            this.GetChargeInfoTAsync(pTicket, null);
        }
        
        /// <remarks/>
        public void GetChargeInfoTAsync(string pTicket, object userState) {
            if ((this.GetChargeInfoTOperationCompleted == null)) {
                this.GetChargeInfoTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeInfoTOperationCompleted);
            }
            this.InvokeAsync("GetChargeInfoT", new object[] {
                        pTicket}, this.GetChargeInfoTOperationCompleted, userState);
        }
        
        private void OnGetChargeInfoTOperationCompleted(object arg) {
            if ((this.GetChargeInfoTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeInfoTCompleted(this, new GetChargeInfoTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSmsCostT", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSmsCostT(string pTicket, string sms, out int cost) {
            object[] results = this.Invoke("GetSmsCostT", new object[] {
                        pTicket,
                        sms});
            cost = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsCostTAsync(string pTicket, string sms) {
            this.GetSmsCostTAsync(pTicket, sms, null);
        }
        
        /// <remarks/>
        public void GetSmsCostTAsync(string pTicket, string sms, object userState) {
            if ((this.GetSmsCostTOperationCompleted == null)) {
                this.GetSmsCostTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsCostTOperationCompleted);
            }
            this.InvokeAsync("GetSmsCostT", new object[] {
                        pTicket,
                        sms}, this.GetSmsCostTOperationCompleted, userState);
        }
        
        private void OnGetSmsCostTOperationCompleted(object arg) {
            if ((this.GetSmsCostTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCostTCompleted(this, new GetSmsCostTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSmsNumberPrice2", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetSmsNumberPrice2(string fixPart, string varPart, double ceilPrice, double floorPrice) {
            object[] results = this.Invoke("GetSmsNumberPrice2", new object[] {
                        fixPart,
                        varPart,
                        ceilPrice,
                        floorPrice});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsNumberPrice2Async(string fixPart, string varPart, double ceilPrice, double floorPrice) {
            this.GetSmsNumberPrice2Async(fixPart, varPart, ceilPrice, floorPrice, null);
        }
        
        /// <remarks/>
        public void GetSmsNumberPrice2Async(string fixPart, string varPart, double ceilPrice, double floorPrice, object userState) {
            if ((this.GetSmsNumberPrice2OperationCompleted == null)) {
                this.GetSmsNumberPrice2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsNumberPrice2OperationCompleted);
            }
            this.InvokeAsync("GetSmsNumberPrice2", new object[] {
                        fixPart,
                        varPart,
                        ceilPrice,
                        floorPrice}, this.GetSmsNumberPrice2OperationCompleted, userState);
        }
        
        private void OnGetSmsNumberPrice2OperationCompleted(object arg) {
            if ((this.GetSmsNumberPrice2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsNumberPrice2Completed(this, new GetSmsNumberPrice2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSectionCount", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte GetSectionCount(string body) {
            object[] results = this.Invoke("GetSectionCount", new object[] {
                        body});
            return ((byte)(results[0]));
        }
        
        /// <remarks/>
        public void GetSectionCountAsync(string body) {
            this.GetSectionCountAsync(body, null);
        }
        
        /// <remarks/>
        public void GetSectionCountAsync(string body, object userState) {
            if ((this.GetSectionCountOperationCompleted == null)) {
                this.GetSectionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSectionCountOperationCompleted);
            }
            this.InvokeAsync("GetSectionCount", new object[] {
                        body}, this.GetSectionCountOperationCompleted, userState);
        }
        
        private void OnGetSectionCountOperationCompleted(object arg) {
            if ((this.GetSectionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSectionCountCompleted(this, new GetSectionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.neginalmas.ir/GetSectionCount2", RequestNamespace="http://www.neginalmas.ir/", ResponseNamespace="http://www.neginalmas.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte GetSectionCount2(string body, long smsNumber, int usrId) {
            object[] results = this.Invoke("GetSectionCount2", new object[] {
                        body,
                        smsNumber,
                        usrId});
            return ((byte)(results[0]));
        }
        
        /// <remarks/>
        public void GetSectionCount2Async(string body, long smsNumber, int usrId) {
            this.GetSectionCount2Async(body, smsNumber, usrId, null);
        }
        
        /// <remarks/>
        public void GetSectionCount2Async(string body, long smsNumber, int usrId, object userState) {
            if ((this.GetSectionCount2OperationCompleted == null)) {
                this.GetSectionCount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSectionCount2OperationCompleted);
            }
            this.InvokeAsync("GetSectionCount2", new object[] {
                        body,
                        smsNumber,
                        usrId}, this.GetSectionCount2OperationCompleted, userState);
        }
        
        private void OnGetSectionCount2OperationCompleted(object arg) {
            if ((this.GetSectionCount2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSectionCount2Completed(this, new GetSectionCount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.neginalmas.ir/")]
    public partial class SendSmsResult {
        
        private long[] messageIdsField;
        
        private int sendIdField;
        
        private long sendCostField;
        
        private int smsCountField;
        
        private int receiversCountField;
        
        private int stateField;
        
        /// <remarks/>
        public long[] MessageIds {
            get {
                return this.messageIdsField;
            }
            set {
                this.messageIdsField = value;
            }
        }
        
        /// <remarks/>
        public int SendId {
            get {
                return this.sendIdField;
            }
            set {
                this.sendIdField = value;
            }
        }
        
        /// <remarks/>
        public long SendCost {
            get {
                return this.sendCostField;
            }
            set {
                this.sendCostField = value;
            }
        }
        
        /// <remarks/>
        public int SmsCount {
            get {
                return this.smsCountField;
            }
            set {
                this.smsCountField = value;
            }
        }
        
        /// <remarks/>
        public int ReceiversCount {
            get {
                return this.receiversCountField;
            }
            set {
                this.receiversCountField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OneSendCompletedEventHandler(object sender, OneSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OneSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OneSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastMessageIdCompletedEventHandler(object sender, GetLastMessageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastMessageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastMessageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OneReceiveCompletedEventHandler(object sender, OneReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OneReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OneReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OneCreditCompletedEventHandler(object sender, OneCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OneCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OneCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Send1SmsCompletedEventHandler(object sender, Send1SmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send1SmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Send1SmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pMessageId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms2CompletedEventHandler(object sender, SendSms2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms21CompletedEventHandler(object sender, SendSms21CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms21CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms21CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long pSendId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms3CompletedEventHandler(object sender, SendSms3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SendSmsResult result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendSmsResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SendSmsResult result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendSmsResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSmsToPortCompletedEventHandler(object sender, SendSmsToPortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsToPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsToPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pSendId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms4CompletedEventHandler(object sender, SendSms4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pSendId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendToGroupCompletedEventHandler(object sender, SendToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SendSmsResult result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendSmsResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSendInfoCompletedEventHandler(object sender, GetSendInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SendSmsResult pResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendSmsResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageIdsCompletedEventHandler(object sender, GetMessageIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int[] pStatuses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendByStatusCompletedEventHandler(object sender, SendByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long pSendIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageStatusCompletedEventHandler(object sender, GetMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] pStatuses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRealMessageStatusesCompletedEventHandler(object sender, GetRealMessageStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealMessageStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealMessageStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] pStatuses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSmsTCompletedEventHandler(object sender, SendSmsTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms2TCompletedEventHandler(object sender, SendSms2TCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms2TCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms2TCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSms3TCompletedEventHandler(object sender, SendSms3TCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms3TCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms3TCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SendSmsResult result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendSmsResult)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageStatusTCompletedEventHandler(object sender, GetMessageStatusTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStatusTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStatusTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] pStatuses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRealMessageStatusesTCompletedEventHandler(object sender, GetRealMessageStatusesTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealMessageStatusesTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealMessageStatusesTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] pStatuses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditInfoCompletedEventHandler(object sender, GetCreditInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long pSendCost {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long pReceiveCost {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public long pCharge {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceivedSmsCompletedEventHandler(object sender, GetReceivedSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivedSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivedSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pRecieved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceivedSms2CompletedEventHandler(object sender, GetReceivedSms2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivedSms2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivedSms2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] pMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] pFroms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] pSmsc {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public System.DateTime[] pEnteredDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime[])(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceivedSms3CompletedEventHandler(object sender, GetReceivedSms3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivedSms3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivedSms3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] pMessages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] pFroms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] pMessageIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public System.DateTime[] pEnteredDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoCompletedEventHandler(object sender, GetInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pSmsNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long pCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int pRole {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int pUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfo2CompletedEventHandler(object sender, GetInfo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pSmsNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long pCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public int pRole {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int pUserId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public System.DateTime pEndDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string pMobile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmsCostCompletedEventHandler(object sender, GetSmsCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int cost {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTariffCompletedEventHandler(object sender, GetTariffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTariffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTariffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] pSmsNumbers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int[] pSendPrices {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int[] pSendPriceUnis {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactInsertCompletedEventHandler(object sender, ContactInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactUpdateCompletedEventHandler(object sender, ContactUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactAddToGroupCompletedEventHandler(object sender, ContactAddToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactAddToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactAddToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactFindByCodeCompletedEventHandler(object sender, ContactFindByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactFindByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactFindByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ContactFindByMobileCompletedEventHandler(object sender, ContactFindByMobileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactFindByMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactFindByMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetContactGroupsCompletedEventHandler(object sender, GetContactGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] pIds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] pNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAuthorizationTicketCompletedEventHandler(object sender, GetAuthorizationTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuthorizationTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuthorizationTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCreditTCompletedEventHandler(object sender, GetCreditTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long pCredit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceivedSmsTCompletedEventHandler(object sender, GetReceivedSmsTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivedSmsTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivedSmsTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pRecieved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReceivedSms2TCompletedEventHandler(object sender, GetReceivedSms2TCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceivedSms2TCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceivedSms2TCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pRecieved {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetChargeInfoTCompletedEventHandler(object sender, GetChargeInfoTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeInfoTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeInfoTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable pReport {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmsCostTCompletedEventHandler(object sender, GetSmsCostTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCostTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCostTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int cost {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSmsNumberPrice2CompletedEventHandler(object sender, GetSmsNumberPrice2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsNumberPrice2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsNumberPrice2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSectionCountCompletedEventHandler(object sender, GetSectionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSectionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSectionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSectionCount2CompletedEventHandler(object sender, GetSectionCount2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSectionCount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSectionCount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591